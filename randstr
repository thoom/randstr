#! /usr/bin/env ruby

require 'optparse'
require 'securerandom'

def randstr(len: 0, type: :alnum, cust: [])
  num = (48..57).to_a
  upper = (65..90).to_a
  lower = (97..122).to_a

  case type
  when :alpha
    range = upper + lower
  when :upper
    range = upper
  when :upnum
    range = num + upper
  when :lower
    range = lower
  when :lownum
    range = num + lower
  when :num
    range = num
  when :custom
    range = cust
  else
    range = num + upper + lower
  end

  # pulled from http://codereview.stackexchange.com/questions/15958
  if type == :cust
    ([nil] * len).map { range.sample }.join
  else
    ([nil] * len).map { range.sample.chr }.join
  end
end

if __FILE__ == $0
  type = :alnum
  len  = 32
  cust_vals = ''
  cust_delimiter = ''

  parser = OptionParser.new do |o|
    o.banner = 'Usage: randstr [options]'
    o.separator ""
    o.separator "Specific options:"

    o.on('--alnum  [length]', 'Characters a-z, A-Z, 0-9') do |length|
      type = :alnum
      len = length if length
    end

    o.on('--alpha  [length]', 'Characters a-z, A-Z') do |length|
      type = :alpha
      len = length if length
    end

    o.on('--custom values,[length],[delimiter]', Array, 'Provide a custom set of values to build the string') do |custom|
      values, length, delimiter = custom
      # puts "len #{length}\nvalues #{values}\ndelimiter #{delimiter}"

      type = :custom
      len = length if length
      cust_vals = values if values
      cust_delimiter = delimiter if delimiter
    end

    o.on('--lower  [length]', 'Characters a-z') do |length|
      type = :lower
      len = length if length
    end

    o.on('--lownum [length]', 'Characters a-z, 0-9') do |length|
      type = :lownum
      len = length if length
    end

    o.on('--hex    [length]', 'Characters a-f, 0-9') do |length|
      type = :hex
      len = length if length
    end

    o.on('--num    [length]', 'Characters 0-9') do |length|
      type = :num
      len = length if length
    end

    o.on('--uuid', 'UUID v4 string') do
      type = :uuid
    end

    o.on('--upper  [length]', 'Characters A-Z') do |length|
      type = :upper
      len = length if length
    end

    o.on('--upnum  [length]', 'Characters A-Z, 0-9') do |length|
      type = :upnum
      len = length if length
    end

    o.separator ""
    o.separator "Common options:"

    o.on_tail('--help', 'Shows this message') do
        puts o
        exit
    end

    o.on_tail('--version', 'Current version') do
        puts <<-TXT

 randstr v.1.0
 --------------
 e: zdp@thoomtech.com
 w: https://github.com/thoom/randstr

        TXT
        exit
    end

  end

  parser.parse! ARGV

  len = len.to_i
  if type == :hex
    result = SecureRandom.hex(len  / 2)
  elsif type == :uuid
    result = SecureRandom.uuid
  elsif type == :custom
    cust = cust_vals.split(cust_delimiter)
    result = randstr(len: len, type: type, cust: cust)
  else
    result = randstr(len: len, type: type)
  end

  puts result
end
